definitions:
  handlers.helloApiMessage:
    properties:
      message:
        type: string
    type: object
  models.BertAIResults:
    properties:
      errors_count:
        type: integer
      score_1:
        type: integer
      score_2:
        type: integer
      score_3:
        type: integer
      score_4:
        type: integer
      score_5:
        type: integer
      success_count:
        type: integer
    type: object
  models.RobertaAIResults:
    properties:
      errors_count:
        type: integer
      negative:
        type: number
      neutral:
        type: number
      positive:
        type: number
      success_count:
        type: integer
    type: object
  models.YoutubeAnalysisLandingResults:
    properties:
      bert_results:
        $ref: '#/definitions/models.BertAIResults'
      video_id:
        type: string
      video_title:
        type: string
    type: object
  models.YoutubeAnalysisResults:
    properties:
      bert_results:
        $ref: '#/definitions/models.BertAIResults'
      recommendation_chat_gpt:
        description: Recommendation given by ChatGPT based on all the comments retrieved
        type: string
      roberta_results:
        $ref: '#/definitions/models.RobertaAIResults'
      video_id:
        type: string
    type: object
  models.YoutubeAnalyzerLandingReqBody:
    properties:
      video_id:
        example: 1xoy8Q5o8ws
        type: string
    type: object
  models.YoutubeAnalyzerLandingRespBody:
    properties:
      created_at:
        type: string
      email:
        type: string
      results:
        $ref: '#/definitions/models.YoutubeAnalysisLandingResults'
      snippet:
        $ref: '#/definitions/youtube.VideoSnippet'
      video_id:
        type: string
    type: object
  models.YoutubeAnalyzerReqBody:
    properties:
      account_email:
        description: The email of the account sending the request
        type: string
      email:
        description: The email that will be used to send the results
        type: string
      video_id:
        type: string
    type: object
  models.YoutubeAnalyzerRespBody:
    properties:
      account_email:
        type: string
      created_at:
        type: string
      email:
        type: string
      last_update:
        type: string
      results_id:
        description: firestore results id
        type: string
      video_id:
        type: string
    type: object
  models.YoutubePreAnalyzerReqBody:
    properties:
      video_id:
        type: string
    type: object
  models.YoutubePreAnalyzerRespBody:
    properties:
      requires_email:
        type: boolean
      snippet:
        $ref: '#/definitions/youtube.VideoSnippet'
      statistics:
        $ref: '#/definitions/youtube.VideoStatistics'
      video_id:
        type: string
    type: object
  models.YoutubeVideoAnalyzed:
    properties:
      created_at:
        type: string
      last_update:
        type: string
      results:
        $ref: '#/definitions/models.YoutubeAnalysisResults'
      snippet:
        $ref: '#/definitions/youtube.VideoSnippet'
      video_id:
        type: string
    type: object
  models.YoutubeVideoDashboard:
    properties:
      created_at:
        type: string
      last_update:
        type: string
      snippet:
        $ref: '#/definitions/youtube.VideoSnippet'
      video_id:
        type: string
    type: object
  models.YoutubeVideosRespBody:
    properties:
      count:
        example: 10
        type: integer
      next:
        example: http://example.com
        type: string
      previous:
        example: http://example.com
        type: string
      results:
        items:
          $ref: '#/definitions/models.YoutubeVideoDashboard'
        type: array
    type: object
  utils.HandleError.errorResponse:
    properties:
      error:
        example: an error ocurred
        type: string
    type: object
  youtube.Thumbnail:
    properties:
      height:
        description: 'Height: (Optional) Height of the thumbnail image.'
        type: integer
      url:
        description: 'Url: The thumbnail image''s URL.'
        type: string
      width:
        description: 'Width: (Optional) Width of the thumbnail image.'
        type: integer
    type: object
  youtube.ThumbnailDetails:
    properties:
      default:
        allOf:
        - $ref: '#/definitions/youtube.Thumbnail'
        description: 'Default: The default image for this resource.'
      high:
        allOf:
        - $ref: '#/definitions/youtube.Thumbnail'
        description: 'High: The high quality image for this resource.'
      maxres:
        allOf:
        - $ref: '#/definitions/youtube.Thumbnail'
        description: 'Maxres: The maximum resolution quality image for this resource.'
      medium:
        allOf:
        - $ref: '#/definitions/youtube.Thumbnail'
        description: 'Medium: The medium quality image for this resource.'
      standard:
        allOf:
        - $ref: '#/definitions/youtube.Thumbnail'
        description: 'Standard: The standard quality image for this resource.'
    type: object
  youtube.VideoLocalization:
    properties:
      description:
        description: 'Description: Localized version of the video''s description.'
        type: string
      title:
        description: 'Title: Localized version of the video''s title.'
        type: string
    type: object
  youtube.VideoSnippet:
    properties:
      categoryId:
        description: 'CategoryId: The YouTube video category associated with the video.'
        type: string
      channelId:
        description: |-
          ChannelId: The ID that YouTube uses to uniquely identify the channel
          that the video was uploaded to.
        type: string
      channelTitle:
        description: |-
          ChannelTitle: Channel title for the channel that the video belongs
          to.
        type: string
      defaultAudioLanguage:
        description: |-
          DefaultAudioLanguage: The default_audio_language property specifies
          the language spoken in the video's default audio track.
        type: string
      defaultLanguage:
        description: 'DefaultLanguage: The language of the videos''s default snippet.'
        type: string
      description:
        description: |-
          Description: The video's description. @mutable youtube.videos.insert
          youtube.videos.update
        type: string
      liveBroadcastContent:
        description: |-
          LiveBroadcastContent: Indicates if the video is an upcoming/active
          live broadcast. Or it's "none" if the video is not an upcoming/active
          live broadcast.

          Possible values:
            "none"
            "upcoming" - The live broadcast is upcoming.
            "live" - The live broadcast is active.
            "completed" - The live broadcast has been completed.
        type: string
      localized:
        allOf:
        - $ref: '#/definitions/youtube.VideoLocalization'
        description: |-
          Localized: Localized snippet selected with the hl parameter. If no
          such localization exists, this field is populated with the default
          snippet. (Read-only)
      publishedAt:
        description: 'PublishedAt: The date and time when the video was uploaded.'
        type: string
      tags:
        description: |-
          Tags: A list of keyword tags associated with the video. Tags may
          contain spaces.
        items:
          type: string
        type: array
      thumbnails:
        allOf:
        - $ref: '#/definitions/youtube.ThumbnailDetails'
        description: |-
          Thumbnails: A map of thumbnail images associated with the video. For
          each object in the map, the key is the name of the thumbnail image,
          and the value is an object that contains other information about the
          thumbnail.
      title:
        description: |-
          Title: The video's title. @mutable youtube.videos.insert
          youtube.videos.update
        type: string
    type: object
  youtube.VideoStatistics:
    properties:
      commentCount:
        description: 'CommentCount: The number of comments for the video.'
        example: "0"
        type: string
      dislikeCount:
        description: |-
          DislikeCount: The number of users who have indicated that they
          disliked the video by giving it a negative rating.
        example: "0"
        type: string
      favoriteCount:
        description: |-
          FavoriteCount: The number of users who currently have the video
          marked as a favorite video.
        example: "0"
        type: string
      likeCount:
        description: |-
          LikeCount: The number of users who have indicated that they liked the
          video by giving it a positive rating.
        example: "0"
        type: string
      viewCount:
        description: 'ViewCount: The number of times the video has been viewed.'
        example: "0"
        type: string
    type: object
host: localhost:8001
info:
  contact:
    email: luckly083@gmail.com
    name: saul rojas coila
  description: This is the API documentation of GPTube
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GPTube API swagger docs
  version: "1.0"
paths:
  /api:
    get:
      description: An endpoint used to test the api stability
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.helloApiMessage'
      summary: Hello message from the api
  /api/youtube/analysis:
    post:
      description: An endpoint used to analyze the content of a video using BERT and
        RoBERTa model and ChatGPT.
      parameters:
      - description: Youtube video analysis request body
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/models.YoutubeAnalyzerReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.YoutubeAnalyzerRespBody'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
      summary: Performs the analysis of the youtube video
  /api/youtube/analysis-landing:
    post:
      description: An endpoint used to do a simple analysis with the BERT model to
        show a result in the landing
      parameters:
      - description: Youtube video id
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/models.YoutubeAnalyzerLandingReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.YoutubeAnalyzerLandingRespBody'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
      summary: Simple analysis with BERT model for the landing page
  /api/youtube/pre-analysis:
    post:
      description: An endpoint used to retrieve basic information about the youtube
        video such as title, description, etc.
      parameters:
      - description: Youtube video id
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/models.YoutubePreAnalyzerReqBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.YoutubePreAnalyzerRespBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
      summary: Basic information about the youtube video
  /api/youtube/videos:
    get:
      description: An endpoint to retrieve all the youtube videos that a user has
        analyzed, results are sorted by last_update field.
      parameters:
      - description: the account email
        in: query
        name: account_email
        required: true
        type: string
      - description: the queried page
        in: query
        name: page
        type: integer
      - description: 'page size for the results (default: 10, max: 50)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.YoutubeVideosRespBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
      summary: Get all the videos related to a user in paginated mode
  /api/youtube/videos/{videoId}:
    get:
      description: An endpoint to retrieve the data for a video and its analysis results.
      parameters:
      - description: the account email
        in: query
        name: account_email
        required: true
        type: string
      - description: the video id to be queried
        in: path
        name: videoId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.YoutubeVideoAnalyzed'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HandleError.errorResponse'
      summary: Get the analysis results and data for a video
  /billing:
    get:
      description: An endpoint used to test the billing api stability
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.helloApiMessage'
      summary: Hello message from the billing api
swagger: "2.0"
