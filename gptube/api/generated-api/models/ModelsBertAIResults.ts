/* tslint:disable */
/* eslint-disable */
/**
 * GPTube API swagger docs
 * This is the API documentation of GPTube
 *
 * The version of the OpenAPI document: 1.0
 * Contact: luckly083@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelsBertAIResults
 */
export interface ModelsBertAIResults {
    /**
     * 
     * @type {number}
     * @memberof ModelsBertAIResults
     */
    errorsCount?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsBertAIResults
     */
    score1?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsBertAIResults
     */
    score2?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsBertAIResults
     */
    score3?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsBertAIResults
     */
    score4?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsBertAIResults
     */
    score5?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsBertAIResults
     */
    successCount?: number;
}

/**
 * Check if a given object implements the ModelsBertAIResults interface.
 */
export function instanceOfModelsBertAIResults(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelsBertAIResultsFromJSON(json: any): ModelsBertAIResults {
    return ModelsBertAIResultsFromJSONTyped(json, false);
}

export function ModelsBertAIResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsBertAIResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorsCount': !exists(json, 'errors_count') ? undefined : json['errors_count'],
        'score1': !exists(json, 'score_1') ? undefined : json['score_1'],
        'score2': !exists(json, 'score_2') ? undefined : json['score_2'],
        'score3': !exists(json, 'score_3') ? undefined : json['score_3'],
        'score4': !exists(json, 'score_4') ? undefined : json['score_4'],
        'score5': !exists(json, 'score_5') ? undefined : json['score_5'],
        'successCount': !exists(json, 'success_count') ? undefined : json['success_count'],
    };
}

export function ModelsBertAIResultsToJSON(value?: ModelsBertAIResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errors_count': value.errorsCount,
        'score_1': value.score1,
        'score_2': value.score2,
        'score_3': value.score3,
        'score_4': value.score4,
        'score_5': value.score5,
        'success_count': value.successCount,
    };
}

