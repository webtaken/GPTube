/* tslint:disable */
/* eslint-disable */
/**
 * GPTube API swagger docs
 * This is the API documentation of GPTube
 *
 * The version of the OpenAPI document: 1.0
 * Contact: luckly083@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelsRobertaAIResults
 */
export interface ModelsRobertaAIResults {
    /**
     * 
     * @type {number}
     * @memberof ModelsRobertaAIResults
     */
    errorsCount?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsRobertaAIResults
     */
    negative?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsRobertaAIResults
     */
    neutral?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsRobertaAIResults
     */
    positive?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsRobertaAIResults
     */
    successCount?: number;
}

/**
 * Check if a given object implements the ModelsRobertaAIResults interface.
 */
export function instanceOfModelsRobertaAIResults(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelsRobertaAIResultsFromJSON(json: any): ModelsRobertaAIResults {
    return ModelsRobertaAIResultsFromJSONTyped(json, false);
}

export function ModelsRobertaAIResultsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsRobertaAIResults {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorsCount': !exists(json, 'errors_count') ? undefined : json['errors_count'],
        'negative': !exists(json, 'negative') ? undefined : json['negative'],
        'neutral': !exists(json, 'neutral') ? undefined : json['neutral'],
        'positive': !exists(json, 'positive') ? undefined : json['positive'],
        'successCount': !exists(json, 'success_count') ? undefined : json['success_count'],
    };
}

export function ModelsRobertaAIResultsToJSON(value?: ModelsRobertaAIResults | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errors_count': value.errorsCount,
        'negative': value.negative,
        'neutral': value.neutral,
        'positive': value.positive,
        'success_count': value.successCount,
    };
}

