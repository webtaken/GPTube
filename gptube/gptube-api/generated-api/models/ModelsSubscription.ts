/* tslint:disable */
/* eslint-disable */
/**
 * GPTube API swagger docs
 * This is the API documentation of GPTube
 *
 * The version of the OpenAPI document: 1.0
 * Contact: luckly083@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelsSubscriptionPlanSlug } from './ModelsSubscriptionPlanSlug';
import {
    ModelsSubscriptionPlanSlugFromJSON,
    ModelsSubscriptionPlanSlugFromJSONTyped,
    ModelsSubscriptionPlanSlugToJSON,
} from './ModelsSubscriptionPlanSlug';

/**
 * 
 * @export
 * @interface ModelsSubscription
 */
export interface ModelsSubscription {
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    cardBrand?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    cardLastFour?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    createdAt?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsSubscription
     */
    customerId?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    endsAt?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsSubscription
     */
    orderId?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsSubscription
     */
    productId?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    productName?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    renewsAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    statusFormatted?: string;
    /**
     * PK
     * @type {string}
     * @memberof ModelsSubscription
     */
    subscriptionId?: string;
    /**
     * 
     * @type {ModelsSubscriptionPlanSlug}
     * @memberof ModelsSubscription
     */
    subscriptionPlanSlug?: ModelsSubscriptionPlanSlug;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    trialEndsAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    updatePaymentMethod?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    updatedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsSubscription
     */
    userEmail?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsSubscription
     */
    variantId?: number;
}

/**
 * Check if a given object implements the ModelsSubscription interface.
 */
export function instanceOfModelsSubscription(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelsSubscriptionFromJSON(json: any): ModelsSubscription {
    return ModelsSubscriptionFromJSONTyped(json, false);
}

export function ModelsSubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsSubscription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cardBrand': !exists(json, 'card_brand') ? undefined : json['card_brand'],
        'cardLastFour': !exists(json, 'card_last_four') ? undefined : json['card_last_four'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'customerId': !exists(json, 'customer_id') ? undefined : json['customer_id'],
        'endsAt': !exists(json, 'ends_at') ? undefined : json['ends_at'],
        'orderId': !exists(json, 'order_id') ? undefined : json['order_id'],
        'productId': !exists(json, 'product_id') ? undefined : json['product_id'],
        'productName': !exists(json, 'product_name') ? undefined : json['product_name'],
        'renewsAt': !exists(json, 'renews_at') ? undefined : json['renews_at'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusFormatted': !exists(json, 'status_formatted') ? undefined : json['status_formatted'],
        'subscriptionId': !exists(json, 'subscription_id') ? undefined : json['subscription_id'],
        'subscriptionPlanSlug': !exists(json, 'subscription_plan_slug') ? undefined : ModelsSubscriptionPlanSlugFromJSON(json['subscription_plan_slug']),
        'trialEndsAt': !exists(json, 'trial_ends_at') ? undefined : json['trial_ends_at'],
        'updatePaymentMethod': !exists(json, 'update_payment_method') ? undefined : json['update_payment_method'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'userEmail': !exists(json, 'user_email') ? undefined : json['user_email'],
        'variantId': !exists(json, 'variant_id') ? undefined : json['variant_id'],
    };
}

export function ModelsSubscriptionToJSON(value?: ModelsSubscription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'card_brand': value.cardBrand,
        'card_last_four': value.cardLastFour,
        'created_at': value.createdAt,
        'customer_id': value.customerId,
        'ends_at': value.endsAt,
        'order_id': value.orderId,
        'product_id': value.productId,
        'product_name': value.productName,
        'renews_at': value.renewsAt,
        'status': value.status,
        'status_formatted': value.statusFormatted,
        'subscription_id': value.subscriptionId,
        'subscription_plan_slug': ModelsSubscriptionPlanSlugToJSON(value.subscriptionPlanSlug),
        'trial_ends_at': value.trialEndsAt,
        'update_payment_method': value.updatePaymentMethod,
        'updated_at': value.updatedAt,
        'user_email': value.userEmail,
        'variant_id': value.variantId,
    };
}

