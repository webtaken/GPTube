/* tslint:disable */
/* eslint-disable */
/**
 * GPTube API swagger docs
 * This is the API documentation of GPTube
 *
 * The version of the OpenAPI document: 1.0
 * Contact: luckly083@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelsYoutubeVideoAnalyzed } from './ModelsYoutubeVideoAnalyzed';
import {
    ModelsYoutubeVideoAnalyzedFromJSON,
    ModelsYoutubeVideoAnalyzedFromJSONTyped,
    ModelsYoutubeVideoAnalyzedToJSON,
} from './ModelsYoutubeVideoAnalyzed';

/**
 * 
 * @export
 * @interface ModelsYoutubeAnalyzerRespBody
 */
export interface ModelsYoutubeAnalyzerRespBody {
    /**
     * 
     * @type {string}
     * @memberof ModelsYoutubeAnalyzerRespBody
     */
    accountEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsYoutubeAnalyzerRespBody
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsYoutubeAnalyzerRespBody
     */
    videoId?: string;
    /**
     * 
     * @type {ModelsYoutubeVideoAnalyzed}
     * @memberof ModelsYoutubeAnalyzerRespBody
     */
    videoResults?: ModelsYoutubeVideoAnalyzed;
}

/**
 * Check if a given object implements the ModelsYoutubeAnalyzerRespBody interface.
 */
export function instanceOfModelsYoutubeAnalyzerRespBody(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelsYoutubeAnalyzerRespBodyFromJSON(json: any): ModelsYoutubeAnalyzerRespBody {
    return ModelsYoutubeAnalyzerRespBodyFromJSONTyped(json, false);
}

export function ModelsYoutubeAnalyzerRespBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsYoutubeAnalyzerRespBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountEmail': !exists(json, 'account_email') ? undefined : json['account_email'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'videoId': !exists(json, 'video_id') ? undefined : json['video_id'],
        'videoResults': !exists(json, 'video_results') ? undefined : ModelsYoutubeVideoAnalyzedFromJSON(json['video_results']),
    };
}

export function ModelsYoutubeAnalyzerRespBodyToJSON(value?: ModelsYoutubeAnalyzerRespBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_email': value.accountEmail,
        'email': value.email,
        'video_id': value.videoId,
        'video_results': ModelsYoutubeVideoAnalyzedToJSON(value.videoResults),
    };
}

