/* tslint:disable */
/* eslint-disable */
/**
 * GPTube API swagger docs
 * This is the API documentation of GPTube
 *
 * The version of the OpenAPI document: 1.0
 * Contact: luckly083@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { YoutubeCommentSnippet } from './YoutubeCommentSnippet';
import {
    YoutubeCommentSnippetFromJSON,
    YoutubeCommentSnippetFromJSONTyped,
    YoutubeCommentSnippetToJSON,
} from './YoutubeCommentSnippet';

/**
 * 
 * @export
 * @interface YoutubeComment
 */
export interface YoutubeComment {
    /**
     * Etag: Etag of this resource.
     * @type {string}
     * @memberof YoutubeComment
     */
    etag?: string;
    /**
     * Id: The ID that YouTube uses to uniquely identify the comment.
     * @type {string}
     * @memberof YoutubeComment
     */
    id?: string;
    /**
     * Kind: Identifies what kind of resource this is. Value: the fixed
     * string "youtube#comment".
     * @type {string}
     * @memberof YoutubeComment
     */
    kind?: string;
    /**
     * 
     * @type {YoutubeCommentSnippet}
     * @memberof YoutubeComment
     */
    snippet?: YoutubeCommentSnippet;
}

/**
 * Check if a given object implements the YoutubeComment interface.
 */
export function instanceOfYoutubeComment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function YoutubeCommentFromJSON(json: any): YoutubeComment {
    return YoutubeCommentFromJSONTyped(json, false);
}

export function YoutubeCommentFromJSONTyped(json: any, ignoreDiscriminator: boolean): YoutubeComment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'etag': !exists(json, 'etag') ? undefined : json['etag'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'snippet': !exists(json, 'snippet') ? undefined : YoutubeCommentSnippetFromJSON(json['snippet']),
    };
}

export function YoutubeCommentToJSON(value?: YoutubeComment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'etag': value.etag,
        'id': value.id,
        'kind': value.kind,
        'snippet': YoutubeCommentSnippetToJSON(value.snippet),
    };
}

