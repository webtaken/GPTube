/* tslint:disable */
/* eslint-disable */
/**
 * GPTube API swagger docs
 * This is the API documentation of GPTube
 *
 * The version of the OpenAPI document: 1.0
 * Contact: luckly083@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { YoutubeThumbnail } from './YoutubeThumbnail';
import {
    YoutubeThumbnailFromJSON,
    YoutubeThumbnailFromJSONTyped,
    YoutubeThumbnailToJSON,
} from './YoutubeThumbnail';

/**
 * 
 * @export
 * @interface YoutubeThumbnailDetails
 */
export interface YoutubeThumbnailDetails {
    /**
     * 
     * @type {YoutubeThumbnail}
     * @memberof YoutubeThumbnailDetails
     */
    _default?: YoutubeThumbnail;
    /**
     * 
     * @type {YoutubeThumbnail}
     * @memberof YoutubeThumbnailDetails
     */
    high?: YoutubeThumbnail;
    /**
     * 
     * @type {YoutubeThumbnail}
     * @memberof YoutubeThumbnailDetails
     */
    maxres?: YoutubeThumbnail;
    /**
     * 
     * @type {YoutubeThumbnail}
     * @memberof YoutubeThumbnailDetails
     */
    medium?: YoutubeThumbnail;
    /**
     * 
     * @type {YoutubeThumbnail}
     * @memberof YoutubeThumbnailDetails
     */
    standard?: YoutubeThumbnail;
}

/**
 * Check if a given object implements the YoutubeThumbnailDetails interface.
 */
export function instanceOfYoutubeThumbnailDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function YoutubeThumbnailDetailsFromJSON(json: any): YoutubeThumbnailDetails {
    return YoutubeThumbnailDetailsFromJSONTyped(json, false);
}

export function YoutubeThumbnailDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): YoutubeThumbnailDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_default': !exists(json, 'default') ? undefined : YoutubeThumbnailFromJSON(json['default']),
        'high': !exists(json, 'high') ? undefined : YoutubeThumbnailFromJSON(json['high']),
        'maxres': !exists(json, 'maxres') ? undefined : YoutubeThumbnailFromJSON(json['maxres']),
        'medium': !exists(json, 'medium') ? undefined : YoutubeThumbnailFromJSON(json['medium']),
        'standard': !exists(json, 'standard') ? undefined : YoutubeThumbnailFromJSON(json['standard']),
    };
}

export function YoutubeThumbnailDetailsToJSON(value?: YoutubeThumbnailDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'default': YoutubeThumbnailToJSON(value._default),
        'high': YoutubeThumbnailToJSON(value.high),
        'maxres': YoutubeThumbnailToJSON(value.maxres),
        'medium': YoutubeThumbnailToJSON(value.medium),
        'standard': YoutubeThumbnailToJSON(value.standard),
    };
}

